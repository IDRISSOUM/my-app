{"ast":null,"code":"var _jsxFileName = \"/Users/mac/test-react/my-app/src/components/Cities.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cities() {\n  _s();\n\n  const url = \"https://testapi.photodino.de/cities/\"; // const [error, setError] = useState(null);\n  // const [isLoaded, setIsLoaded] = useState(false);\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch(url).then(response => response.json()).then(json => {\n      console.log('bdbvbdibd', json); //   setIsLoaded(true);\n\n      setData(json); //   console.log('result', result.items.json)\n    }).catch(error => {\n      console.log('jvcgugvu', error);\n    }); // Remarque : il faut gérer les erreurs ici plutôt que dans\n    // un bloc catch() afin que nous n’avalions pas les exceptions\n    // dues à de véritables bugs dans les composants.\n    // (error) => {\n    //   setIsLoaded(true);\n    //   setError(error);\n    // }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      justifyContent: 'center',\n      textAlign: 'justify',\n      backgroundColor: 'red',\n      display: 'inline-block'\n    },\n    children: data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"caption\", {\n          children: \"Custamer Partner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Locations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                alignItems: 'right',\n                color: 'white'\n              },\n              children: \"Added\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.locations\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.time_added\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this); //   if (error) {\n  //     return <div>Erreur : {error.message}</div>;\n  //   } else if (!isLoaded) {\n  //     return <div>Chargement...</div>;\n  //   } else {\n  //     <div className = \"App\" style={{justifyContent: 'center', textAlign: 'justify', backgroundColor: 'red', display: 'inline-block'}}>\n  //     {\n  //         items.map((item) => ( \n  //                 <div>\n  //                     <table key={item.id}>\n  //                         <caption>Custamer Partner</caption>\n  //                         <thead> \n  //                             <tr>\n  //                                 <th>Name</th>\n  //                                 <th>Locations</th>\n  //                                 <th style={{alignItems: 'right', color: 'white'}}>Added</th>\n  //                             </tr>\n  //                         </thead>\n  //                         <tbody> \n  //                             <tr>\n  //                                 <td>{item.name}</td>\n  //                                 <td>{item.locations}</td>\n  //                                 <td>{item.time_added}</td>\n  //                             </tr>\n  //                         </tbody>\n  //                     </table>\n  //                 </div>\n  //         ))\n  //     }\n  // </div>\n  //   }\n}\n\n_s(Cities, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = Cities;\nexport default Cities;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cities\");","map":{"version":3,"sources":["/Users/mac/test-react/my-app/src/components/Cities.js"],"names":["useEffect","Cities","url","data","setData","useState","fetch","then","response","json","console","log","catch","error","justifyContent","textAlign","backgroundColor","display","map","item","alignItems","color","name","locations","time_added","id"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;;;AAEA,SAASC,MAAT,GAAiB;AAAA;;AACb,QAAMC,GAAG,GAAG,sCAAZ,CADa,CAEb;AACA;;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,EAAD,CAAhC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAACJ,GAAD,CAAL,CACGK,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQE,IAAI,IAAI;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,IAAzB,EADQ,CAEZ;;AACEL,MAAAA,OAAO,CAACK,IAAD,CAAP,CAHU,CAIZ;AACC,KAPL,EAOOG,KAPP,CAOaC,KAAK,IAAG;AACbH,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBE,KAAxB;AACH,KATL,EADY,CAWR;AACA;AACA;AACA;AACA;AACA;AACA;AAEL,GAnBM,EAmBJ,EAnBI,CAAT;AAoBE,sBACE;AAAK,IAAA,SAAS,EAAG,KAAjB;AAAuB,IAAA,KAAK,EAAE;AAACC,MAAAA,cAAc,EAAE,QAAjB;AAA2BC,MAAAA,SAAS,EAAE,SAAtC;AAAiDC,MAAAA,eAAe,EAAE,KAAlE;AAAyEC,MAAAA,OAAO,EAAE;AAAlF,KAA9B;AAAA,cAEId,IAAI,CAACe,GAAL,CAAUC,IAAD,iBACD;AAAA,6BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,iCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAI,cAAA,KAAK,EAAE;AAACC,gBAAAA,UAAU,EAAE,OAAb;AAAsBC,gBAAAA,KAAK,EAAE;AAA7B,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAUI;AAAA,iCACI;AAAA,oCACI;AAAA,wBAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAKH,IAAI,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,wBAAKJ,IAAI,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA,SAAYL,IAAI,CAACM,EAAjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADR;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF,CA1BW,CAwDb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACH;;GAzFQxB,M;;KAAAA,M;AA2FT,eAAeA,MAAf","sourcesContent":["import { useEffect } from 'react';\n\nfunction Cities(){\n    const url = \"https://testapi.photodino.de/cities/\"\n    // const [error, setError] = useState(null);\n    // const [isLoaded, setIsLoaded] = useState(false);\n    const [data, setData] = useState([]);\n\n    useEffect(() => { \n        fetch(url)\n          .then(response => response.json())\n          .then(json => {\n                console.log('bdbvbdibd', json)\n            //   setIsLoaded(true);\n              setData(json);\n            //   console.log('result', result.items.json)\n            }).catch(error =>{\n                console.log('jvcgugvu', error)\n            })\n            // Remarque : il faut gérer les erreurs ici plutôt que dans\n            // un bloc catch() afin que nous n’avalions pas les exceptions\n            // dues à de véritables bugs dans les composants.\n            // (error) => {\n            //   setIsLoaded(true);\n            //   setError(error);\n            // }\n          \n      }, [])\n      return (\n        <div className = \"App\" style={{justifyContent: 'center', textAlign: 'justify', backgroundColor: 'red', display: 'inline-block'}}>\n        {\n            data.map((item) => ( \n                    <div>\n                        <table key={item.id}>\n                            <caption>Custamer Partner</caption>\n                            <thead> \n                                <tr>\n                                    <th>Name</th>\n                                    <th>Locations</th>\n                                    <th style={{alignItems: 'right', color: 'white'}}>Added</th>\n                                </tr>\n                            </thead>\n\n                            <tbody> \n                                <tr>\n                                    <td>{item.name}</td>\n                                    <td>{item.locations}</td>\n                                    <td>{item.time_added}</td>\n                                </tr>\n                            </tbody>\n\n                        </table>\n                    </div>\n            ))\n        }\n    </div>\n      )\n    \n    //   if (error) {\n    //     return <div>Erreur : {error.message}</div>;\n    //   } else if (!isLoaded) {\n    //     return <div>Chargement...</div>;\n    //   } else {\n    //     <div className = \"App\" style={{justifyContent: 'center', textAlign: 'justify', backgroundColor: 'red', display: 'inline-block'}}>\n    //     {\n    //         items.map((item) => ( \n    //                 <div>\n    //                     <table key={item.id}>\n    //                         <caption>Custamer Partner</caption>\n    //                         <thead> \n    //                             <tr>\n    //                                 <th>Name</th>\n    //                                 <th>Locations</th>\n    //                                 <th style={{alignItems: 'right', color: 'white'}}>Added</th>\n    //                             </tr>\n    //                         </thead>\n\n    //                         <tbody> \n    //                             <tr>\n    //                                 <td>{item.name}</td>\n    //                                 <td>{item.locations}</td>\n    //                                 <td>{item.time_added}</td>\n    //                             </tr>\n    //                         </tbody>\n\n    //                     </table>\n    //                 </div>\n    //         ))\n    //     }\n    // </div>\n    //   }\n}\n\nexport default Cities;"]},"metadata":{},"sourceType":"module"}