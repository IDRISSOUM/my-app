{"ast":null,"code":"var _jsxFileName = \"/Users/mac/test-react/my-app/src/components/Cities.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cities() {\n  _s();\n\n  // const url = \"https://testapi.photodino.de/cities/\"\n  // const [error, setError] = useState(null);\n  // const [isLoaded, setIsLoaded] = useState(false);\n  // const [items, setItems] = useState([]);\n  useEffect(() => {\n    fetch(\"https://testapi.photodino.de/cities/\").then(response => response.json()).then(json => {\n      console.log('bdbvbdibd', json); //   setIsLoaded(true);\n      //   setItems(result.items.json);\n      //   console.log('result', result.items.json)\n    }).catch(error => {\n      console.log('jvcgugvu', error);\n    }); // Remarque : il faut gérer les erreurs ici plutôt que dans\n    // un bloc catch() afin que nous n’avalions pas les exceptions\n    // dues à de véritables bugs dans les composants.\n    // (error) => {\n    //   setIsLoaded(true);\n    //   setError(error);\n    // }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcomme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 11\n  }, this); //   if (error) {\n  //     return <div>Erreur : {error.message}</div>;\n  //   } else if (!isLoaded) {\n  //     return <div>Chargement...</div>;\n  //   } else {\n  //     <div className = \"App\" style={{justifyContent: 'center', textAlign: 'justify', backgroundColor: 'red', display: 'inline-block'}}>\n  //     {\n  //         items.map((item) => ( \n  //                 <div>\n  //                     <table key={item.id}>\n  //                         <caption>Custamer Partner</caption>\n  //                         <thead> \n  //                             <tr>\n  //                                 <th>Name</th>\n  //                                 <th>Locations</th>\n  //                                 <th style={{alignItems: 'right', color: 'white'}}>Added</th>\n  //                             </tr>\n  //                         </thead>\n  //                         <tbody> \n  //                             <tr>\n  //                                 <td>{item.name}</td>\n  //                                 <td>{item.locations}</td>\n  //                                 <td>{item.time_added}</td>\n  //                             </tr>\n  //                         </tbody>\n  //                     </table>\n  //                 </div>\n  //         ))\n  //     }\n  // </div>\n  //   }\n}\n\n_s(Cities, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Cities;\nexport default Cities;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cities\");","map":{"version":3,"sources":["/Users/mac/test-react/my-app/src/components/Cities.js"],"names":["useEffect","Cities","fetch","then","response","json","console","log","catch","error"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;;;AAEA,SAASC,MAAT,GAAiB;AAAA;;AACb;AACA;AACA;AACA;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAAC,sCAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQE,IAAI,IAAI;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,IAAzB,EADQ,CAEZ;AACA;AACA;AACC,KAPL,EAOOG,KAPP,CAOaC,KAAK,IAAG;AACbH,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBE,KAAxB;AACH,KATL,EADY,CAWR;AACA;AACA;AACA;AACA;AACA;AACA;AAEL,GAnBM,EAmBJ,EAnBI,CAAT;AAoBE,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ,CA1BW,CAkCb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACH;;GAnEQR,M;;KAAAA,M;AAqET,eAAeA,MAAf","sourcesContent":["import { useEffect } from 'react';\n\nfunction Cities(){\n    // const url = \"https://testapi.photodino.de/cities/\"\n    // const [error, setError] = useState(null);\n    // const [isLoaded, setIsLoaded] = useState(false);\n    // const [items, setItems] = useState([]);\n\n    useEffect(() => { \n        fetch(\"https://testapi.photodino.de/cities/\")\n          .then(response => response.json())\n          .then(json => {\n                console.log('bdbvbdibd', json)\n            //   setIsLoaded(true);\n            //   setItems(result.items.json);\n            //   console.log('result', result.items.json)\n            }).catch(error =>{\n                console.log('jvcgugvu', error)\n            })\n            // Remarque : il faut gérer les erreurs ici plutôt que dans\n            // un bloc catch() afin que nous n’avalions pas les exceptions\n            // dues à de véritables bugs dans les composants.\n            // (error) => {\n            //   setIsLoaded(true);\n            //   setError(error);\n            // }\n          \n      }, [])\n      return (\n          <div className=\"App\">\n              <h1>\n                  Welcomme\n              </h1>\n              </div>\n      )\n    \n    //   if (error) {\n    //     return <div>Erreur : {error.message}</div>;\n    //   } else if (!isLoaded) {\n    //     return <div>Chargement...</div>;\n    //   } else {\n    //     <div className = \"App\" style={{justifyContent: 'center', textAlign: 'justify', backgroundColor: 'red', display: 'inline-block'}}>\n    //     {\n    //         items.map((item) => ( \n    //                 <div>\n    //                     <table key={item.id}>\n    //                         <caption>Custamer Partner</caption>\n    //                         <thead> \n    //                             <tr>\n    //                                 <th>Name</th>\n    //                                 <th>Locations</th>\n    //                                 <th style={{alignItems: 'right', color: 'white'}}>Added</th>\n    //                             </tr>\n    //                         </thead>\n\n    //                         <tbody> \n    //                             <tr>\n    //                                 <td>{item.name}</td>\n    //                                 <td>{item.locations}</td>\n    //                                 <td>{item.time_added}</td>\n    //                             </tr>\n    //                         </tbody>\n\n    //                     </table>\n    //                 </div>\n    //         ))\n    //     }\n    // </div>\n    //   }\n}\n\nexport default Cities;"]},"metadata":{},"sourceType":"module"}