{"ast":null,"code":"var _jsxFileName = \"/Users/mac/my-app/src/components/AddEvents.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unreachable */\n\n/* eslint-disable react/jsx-no-comment-textnodes */\n\n/* eslint-disable react/style-prop-object */\nimport React, { useState, useEffect } from \"react\";\nimport DatePicker from 'react-datepicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SENDEVENTS() {\n  _s();\n\n  const [locations, setLocations] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [event_date, setEventdate] = useState();\n  const [selectlocations, setSelectLocations] = useState();\n  useEffect(() => {\n    getData();\n  }, []);\n  const url = \"https://testapi.photodino.de/locations/\";\n\n  const getData = () => {\n    fetch(url).then(response => {\n      return response.json();\n    }).then(data => {\n      console.log('LLLLLLEEE', data);\n      setLocations(data);\n    }).catch(error => {\n      console.log('error', error.message);\n    });\n  }; // const formatDate = (date) => {\n  //     let d = new Date(date);\n  //     let month = (d.getMonth() + 1).toString().padStart(2, '0');\n  //     let day = d.getDate().toString().padStart(2, '0');\n  //     let year = d.getFullYear();\n  //     return [year, month, day].join('-');\n  //   }\n\n\n  const postEvent = e => {\n    e.preventDefault();\n    const values = {\n      location: selectlocations,\n      name: name,\n      description: description,\n      event_date: event_date\n    };\n    const url = \"https://testapi.photodino.de/events/\";\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(values)\n    }).then(response => {\n      console.log('SEEEEEEE', values);\n      console.log(\"response\", response); // eslint-disable-next-line eqeqeq\n\n      if (response.ok) {\n        setName(\"\");\n      }\n    }).catch(error => {\n      console.log('erreur', error);\n    });\n  };\n\n  const choiceLocations = function (e) {\n    setSelectLocations(e.target.value);\n  };\n\n  console.log('jjjj', locations);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: postEvent,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"company\",\n        children: \"Locations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        onChange: choiceLocations,\n        children: locations.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.id,\n            children: item.name\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"fname\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"fname\",\n        value: name,\n        placeholder: \"Name\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        id: \"lname\",\n        value: description,\n        placeholder: \"Description\",\n        onChange: e => setDescription(e.target.value),\n        style: {\n          height: 200,\n          resize: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"date\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"lname\",\n        value: event_date,\n        placeholder: \"Date\",\n        onChange: e => setEventdate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 13\n  }, this);\n}\n\n_s(SENDEVENTS, \"kGU/Iwr7Tbw8gmrPAQkuhKSOxew=\");\n\n_c = SENDEVENTS;\nexport default SENDEVENTS;\n\nvar _c;\n\n$RefreshReg$(_c, \"SENDEVENTS\");","map":{"version":3,"sources":["/Users/mac/my-app/src/components/AddEvents.js"],"names":["React","useState","useEffect","DatePicker","SENDEVENTS","locations","setLocations","name","setName","description","setDescription","event_date","setEventdate","selectlocations","setSelectLocations","getData","url","fetch","then","response","json","data","console","log","catch","error","message","postEvent","e","preventDefault","values","location","method","headers","body","JSON","stringify","ok","choiceLocations","target","value","map","item","id","height","resize"],"mappings":"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","sourcesContent":["/* eslint-disable no-unreachable */\n/* eslint-disable react/jsx-no-comment-textnodes */\n/* eslint-disable react/style-prop-object */\nimport React, { useState, useEffect } from \"react\";\nimport DatePicker from 'react-datepicker';\n\nfunction SENDEVENTS ()  {\n    const [locations, setLocations] = useState([]);\n    const [name, setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [event_date, setEventdate] = useState();\n    const [selectlocations, setSelectLocations] = useState();\n\n\n    useEffect(() => { \n        getData();\n        \n        }, [])\n    const url = \"https://testapi.photodino.de/locations/\"\n    \n    const getData = () => {\n        fetch(url)\n        .then(response => {\n            return response.json()\n        })\n        .then(data => {\n            console.log('LLLLLLEEE', data);\n            setLocations(data);\n        }).catch(error =>{console.log('error', error.message)})\n    }\n\n    \n    // const formatDate = (date) => {\n    //     let d = new Date(date);\n    //     let month = (d.getMonth() + 1).toString().padStart(2, '0');\n    //     let day = d.getDate().toString().padStart(2, '0');\n    //     let year = d.getFullYear();\n    //     return [year, month, day].join('-');\n    //   }\n\n    const postEvent = (e) => {\n        e.preventDefault();\n        const values = {\n            location: selectlocations,\n            name: name,\n            description: description,\n            event_date: event_date\n        }\n        const url = \"https://testapi.photodino.de/events/\"\n        fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(values),\n        })\n        .then(response => {\n            console.log('SEEEEEEE', values)\n            console.log(\"response\", response);\n            // eslint-disable-next-line eqeqeq\n            if(response.ok){\n                setName(\"\")\n            }\n            }).catch(error =>{\n                console.log('erreur', error)\n                \n            })\n        }\n\n        const choiceLocations = function(e) {\n            setSelectLocations(e.target.value)\n        }\n        \n        console.log('jjjj', locations)\n        return(\n            <div>\n                <form onSubmit={postEvent}>\n                    <label for=\"company\">Locations</label>\n                    <select className=\"form-control\" onChange={choiceLocations}>\n                        {locations.map(item => {  \n                            return (\n                            <option key={item.id} value={item.id}>\n                                {item.name}\n                            </option>\n                            );\n                            })}\n                    </select>  \n\n                    <label for=\"fname\">Name</label>\n                    <input type=\"text\" id=\"fname\" value={name} placeholder=\"Name\" onChange={(e) => setName(e.target.value)} />\n\n                    <label for=\"description\">Description</label>\n                    <textarea type=\"text\" id=\"lname\" value={description} placeholder=\"Description\" onChange={(e) => setDescription(e.target.value)} style={{height:200, resize: 'none'}}></textarea>\n\n                    <label for=\"date\">Date</label>\n                    <input  \n                    type=\"date\" \n                    id=\"lname\" \n                    value={event_date}  \n                    placeholder=\"Date\" \n                    onChange={(e) => setEventdate(e.target.value)} />\n                    \n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>\n        );\n}\n\nexport default SENDEVENTS;"]},"metadata":{},"sourceType":"module"}