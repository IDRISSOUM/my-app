{"ast":null,"code":"var _jsxFileName = \"/Users/mac/my-app/src/components/AddEvents.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/jsx-no-comment-textnodes */\n\n/* eslint-disable react/style-prop-object */\nimport { useState } from \"react\";\nimport DatePicker from 'react-datepicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SENDEVENTS() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [locations, setLocations] = useState(\"\");\n  const [event_date, setEventdate] = useState(new Date());\n  const [message, setMessage] = useState(\"\");\n\n  const formatDate = date => {\n    let d = new Date(date);\n    let month = (d.getMonth() + 1).toString().padStart(2, '0');\n    let day = d.getDate().toString().padStart(2, '0');\n    let year = d.getFullYear();\n    return [year, month, day].join('-');\n  };\n\n  const postEvent = e => {\n    e.preventDefault();\n    const data = {\n      locations: 83,\n      name: name,\n      description: description,\n      event_date: formatDate()\n    };\n    const url = \"https://testapi.photodino.de/events/\";\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => {\n      console.log(\"response\", response); // eslint-disable-next-line eqeqeq\n\n      if (response.ok) {\n        setName(\"\");\n      }\n    }).catch(error => {\n      console.log('erreur', error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: postEvent,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"fname\",\n        children: \"Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"fname\",\n        value: locations,\n        placeholder: \"Name\",\n        onChange: e => setLocations(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"fname\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"fname\",\n        value: name,\n        placeholder: \"Name\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        id: \"lname\",\n        value: description,\n        placeholder: \"Description\",\n        onChange: e => setDescription(e.target.value),\n        style: {\n          height: 200,\n          resize: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"date\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"lname\",\n        value: event_date,\n        placeholder: \"Date\",\n        onChange: e => setEventdate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 13\n  }, this);\n}\n\n_s(SENDEVENTS, \"Ioa0g0V/1wdSWIve2OM/wOOMzso=\");\n\n_c = SENDEVENTS;\nexport default SENDEVENTS;\n\nvar _c;\n\n$RefreshReg$(_c, \"SENDEVENTS\");","map":{"version":3,"sources":["/Users/mac/my-app/src/components/AddEvents.js"],"names":["useState","DatePicker","SENDEVENTS","name","setName","description","setDescription","locations","setLocations","event_date","setEventdate","Date","message","setMessage","formatDate","date","d","month","getMonth","toString","padStart","day","getDate","year","getFullYear","join","postEvent","e","preventDefault","data","url","fetch","method","headers","body","JSON","stringify","then","response","console","log","ok","catch","error","target","value","height","resize"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-no-comment-textnodes */\n/* eslint-disable react/style-prop-object */\nimport { useState } from \"react\";\nimport DatePicker from 'react-datepicker';\n\nfunction SENDEVENTS ()  {\n    const [name, setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [locations, setLocations] = useState(\"\");\n    const [event_date, setEventdate] = useState(new Date());\n    const [message, setMessage] = useState(\"\");\n\n    const formatDate = (date) => {\n        let d = new Date(date);\n        let month = (d.getMonth() + 1).toString().padStart(2, '0');\n        let day = d.getDate().toString().padStart(2, '0');\n        let year = d.getFullYear();\n        return [year, month, day].join('-');\n      }\n    \n    const postEvent = (e) => {\n        e.preventDefault();\n        const data = {\n            locations: 83,\n            name: name,\n            description: description,\n            event_date: formatDate()\n        }\n        const url = \"https://testapi.photodino.de/events/\"\n        fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        })\n        .then(response => {\n            console.log(\"response\", response);\n            // eslint-disable-next-line eqeqeq\n            if(response.ok){\n                setName(\"\")\n            }\n            }).catch(error =>{\n                console.log('erreur', error)\n                \n            })\n        }\n\n        return(\n            <div>\n                <form onSubmit={postEvent}>\n                    <label for=\"fname\">Location</label>\n                    <input type=\"number\" id=\"fname\" value={locations}  placeholder=\"Name\" onChange={(e) => setLocations(e.target.value)} />\n\n                    <label for=\"fname\">Name</label>\n                    <input type=\"text\" id=\"fname\" value={name}  placeholder=\"Name\" onChange={(e) => setName(e.target.value)} />\n\n                    <label for=\"description\">Description</label>\n                    <textarea type=\"text\" id=\"lname\" value={description} placeholder=\"Description\" onChange={(e) => setDescription(e.target.value)} style={{height:200, resize: 'none'}}></textarea>\n\n                    <label for=\"date\">Date</label>\n                    <input  \n                    type=\"text\" \n                    id=\"lname\" \n                    value={event_date}  \n                    placeholder=\"Date\" \n                    onChange={(e) => setEventdate(e.target.value)} />\n                    \n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>\n        );\n}\n\nexport default SENDEVENTS;"]},"metadata":{},"sourceType":"module"}