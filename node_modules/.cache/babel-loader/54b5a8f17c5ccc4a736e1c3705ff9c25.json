{"ast":null,"code":"var _jsxFileName = \"/Users/mac/test-react/my-app/src/components/Cities.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cities() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    fetch(\"https://testapi.photodino.de/cities/\").then(res => res.json());\n    console.log('result', res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n    }, // Remarque : il faut gérer les erreurs ici plutôt que dans\n    // un bloc catch() afin que nous n’avalions pas les exceptions\n    // dues à de véritables bugs dans les composants.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Erreur : \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  } else {//     <div className = \"App\" style={{justifyContent: 'center', textAlign: 'justify', backgroundColor: 'red', display: 'inline-block'}}>\n    //     {\n    //         items.map((item) => ( \n    //                 <div>\n    //                     <table key={item.id}>\n    //                         <caption>Custamer Partner</caption>\n    //                         <thead> \n    //                             <tr>\n    //                                 <th>Name</th>\n    //                                 <th>C</th>\n    //                                 <th style={{alignItems: 'right', color: 'white'}}>Added</th>\n    //                             </tr>\n    //                         </thead>\n    //                         <tbody> \n    //                             <tr>\n    //                                 <td>{item.name}</td>\n    //                                 <td>{item.locations}</td>\n    //                                 <td>{item.time_added}</td>\n    //                             </tr>\n    //                         </tbody>\n    //                     </table>\n    //                 </div>\n    //         ))\n    //     }\n    // </div>\n  }\n}\n\n_s(Cities, \"m9AscAN57M/MODoTwSsNC5AuztA=\");\n\n_c = Cities;\nexport default Cities;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cities\");","map":{"version":3,"sources":["/Users/mac/test-react/my-app/src/components/Cities.js"],"names":["useEffect","useState","Cities","error","setError","isLoaded","setIsLoaded","items","setItems","fetch","then","res","json","console","log","result","message"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,SAASC,MAAT,GAAiB;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,KAAK,CAAC,sCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf;AAEEC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,GAAG,CAACC,IAAJ,EAAtB,EACCF,IADD,CAEGK,MAAD,IAAY;AACVT,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,QAAQ,CAACO,MAAD,CAAR;AAED,KANH,EAOE;AACA;AACA;AACCZ,IAAAA,KAAD,IAAW;AACTG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAbH;AAeH,GAlBM,EAkBJ,EAlBI,CAAT;;AAoBE,MAAIA,KAAJ,EAAW;AACT,wBAAO;AAAA,8BAAeA,KAAK,CAACa,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAI,CAACX,QAAL,EAAe;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,MAEA,CACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACG;AACN;;GA1DQH,M;;KAAAA,M;AA4DT,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from 'react';\n\nfunction Cities(){\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n\n    useEffect(() => {\n        fetch(\"https://testapi.photodino.de/cities/\")\n          .then(res => res.json())\n          console.log('result', res.json())\n          .then(\n            (result) => {\n              setIsLoaded(true);\n              setItems(result);\n              \n            },\n            // Remarque : il faut gérer les erreurs ici plutôt que dans\n            // un bloc catch() afin que nous n’avalions pas les exceptions\n            // dues à de véritables bugs dans les composants.\n            (error) => {\n              setIsLoaded(true);\n              setError(error);\n            }\n          )\n      }, [])\n    \n      if (error) {\n        return <div>Erreur : {error.message}</div>;\n      } else if (!isLoaded) {\n        return <div>Chargement...</div>;\n      } else {\n    //     <div className = \"App\" style={{justifyContent: 'center', textAlign: 'justify', backgroundColor: 'red', display: 'inline-block'}}>\n    //     {\n    //         items.map((item) => ( \n    //                 <div>\n    //                     <table key={item.id}>\n    //                         <caption>Custamer Partner</caption>\n    //                         <thead> \n    //                             <tr>\n    //                                 <th>Name</th>\n    //                                 <th>C</th>\n    //                                 <th style={{alignItems: 'right', color: 'white'}}>Added</th>\n    //                             </tr>\n    //                         </thead>\n\n    //                         <tbody> \n    //                             <tr>\n    //                                 <td>{item.name}</td>\n    //                                 <td>{item.locations}</td>\n    //                                 <td>{item.time_added}</td>\n    //                             </tr>\n    //                         </tbody>\n\n    //                     </table>\n    //                 </div>\n    //         ))\n    //     }\n    // </div>\n      }\n}\n\nexport default Cities;"]},"metadata":{},"sourceType":"module"}