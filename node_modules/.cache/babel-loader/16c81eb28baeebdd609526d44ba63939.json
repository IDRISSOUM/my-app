{"ast":null,"code":"var _jsxFileName = \"/Users/mac/my-app/src/components/App.js\";\nimport React from \"react\";\nimport Cities from \"./Cities\";\nimport Events from \"./Events\"; // import {BrowserRouter, Switch, Route} from 'react-router-dom'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Test extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        class: \"m-3\",\n        children: \"List of City, Locations and Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Cities, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default Test;","map":{"version":3,"sources":["/Users/mac/my-app/src/components/App.js"],"names":["React","Cities","Events","Test","Component","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;;;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAkC;AAE9BC,EAAAA,MAAM,GAAE;AACN,wBACI;AAAA,8BACE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaE;;AAhB0B;;AAmBlC,eAAeF,IAAf","sourcesContent":["import React from \"react\";\nimport Cities from \"./Cities\";\nimport Events from \"./Events\";\n// import {BrowserRouter, Switch, Route} from 'react-router-dom'\n\nclass Test extends React.Component{\n\n    render(){\n      return (\n          <section>\n            <h1 class=\"m-3\">List of City, Locations and Events</h1>\n            {/* <BrowserRouter>\n              <Switch>\n                  <Route path=\"/add-task\" render={(props) => <AddTask {...props} onAddTask={this.onAddTask} />} />\n                  <Route path=\"/:filter?\" render={(props) => <ToDoList {...props} tasks={this.state.tasks} onToggleCompleted={this.onToggleCompleted} />} />\n              </Switch>\n            </BrowserRouter> */}\n            <Cities/>\n            {/* <Events/> */}\n          </section>\n        \n      )}\n  }\n\nexport default Test;"]},"metadata":{},"sourceType":"module"}